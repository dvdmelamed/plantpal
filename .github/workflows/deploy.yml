name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      
      - name: Build with Next.js
        env:
          GITHUB_ACTIONS: true
          GITHUB_REPOSITORY: ${{ github.repository }}
          NODE_ENV: production
        run: |
          echo "Building with repository: $GITHUB_REPOSITORY"
          
          # Run the Next.js build
          npm run build
          
          # Debug directory structure
          echo "Current directory structure after build:"
          ls -la
          
          # Find where the build output is located
          if [ -d ".next/standalone" ]; then
            echo "Found .next/standalone directory"
            BUILD_DIR=".next/standalone"
          elif [ -d ".next" ]; then
            echo "Found .next directory"
            BUILD_DIR=".next"
          else
            echo "No build directory found!"
            BUILD_DIR=""
          fi
          
          # Create out directory
          mkdir -p out
          
          # Copy appropriate files to the out directory
          if [ -d ".next/static" ]; then
            echo "Copying .next/static to out/_next/static"
            mkdir -p out/_next
            cp -r .next/static out/_next/
          fi
          
          if [ -d "public" ]; then
            echo "Copying public files to out"
            cp -r public/* out/
          fi
          
          # Create HTML files in out directory for each route
          echo '<meta http-equiv="refresh" content="0;url=app" />' > out/index.html
          
          # Create .nojekyll file
          touch out/.nojekyll
          
          # Debug the out directory
          echo "Contents of out directory:"
          ls -la out/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 